#!/usr/bin/env python
import re
from subprocess import Popen, PIPE
from xml.etree import ElementTree as ET

service_document = ET.fromstring(Popen("tools/scripts/data-deposit-api/test-service-document", stdout=PIPE).communicate()[0])

deposit_target = service_document[0][1].attrib["href"]

feed_of_studies = ET.fromstring(Popen(["tools/scripts/data-deposit-api/test-collection-get", deposit_target], stdout=PIPE).communicate()[0]);

print "listing all studies..."
all_studies = Popen(["tools/scripts/data-deposit-api/list-studies", deposit_target], stdout=PIPE).communicate()[0]
print all_studies,
print "finding a study to release..."
for line in all_studies.splitlines():
    if line.startswith("-"):
        parts = line.split("- ")
        url_only = parts[1]
        pieces = url_only.split("/")
        url_end = pieces[9:11]

try:
    url_end
    print "will retrieve statement for:", url_end
except NameError:
    print "no studies found"
    exit(1)

url_start = "https://sword:sword@localhost:8181/dvn/api/data-deposit/v1/swordv2/"
edit_uri =       url_start + "edit/"       + "/".join(url_end)

print "getting statement from", edit_uri
statement_xml = Popen(["tools/scripts/data-deposit-api/test-statement", edit_uri], stdout=PIPE).communicate()[0]
statement_parsed = ET.fromstring(statement_xml)
for line in statement_parsed:
    if "{http://www.w3.org/2005/Atom}title" == line.tag:
        print line.text,
    if "{http://www.w3.org/2005/Atom}category" == line.tag:
        if "isReleased" == line.attrib["term"]:
            release_state = line.text
            print "... released:", release_state, "... files:"
    if "{http://www.w3.org/2005/Atom}entry" == line.tag:
        for entry in line:
            if "{http://www.w3.org/2005/Atom}id" == entry.tag:
                print "- ", entry.text
