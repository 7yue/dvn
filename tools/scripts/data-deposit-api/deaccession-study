#!/usr/bin/env ruby
require "rexml/document"
include REXML
service_document = Document.new `tools/scripts/data-deposit-api/test-service-document`
collection = XPath.first(service_document, "//collection/@href")

feed_of_studies = Document.new `tools/scripts/data-deposit-api/test-collection-get #{collection}`
first_study = XPath.first(feed_of_studies, "//entry")
id = first_study.elements["id"].text
study_edit_uri = first_study.attributes["xml:base"]

entry = Document.new `tools/scripts/data-deposit-api/test-edit-get #{study_edit_uri}`
statement_uri = XPath.first(entry,"//link[@rel='http://purl.org/net/sword/terms/statement']").attributes["href"]
release_state_term="latestVersionState"
statement = Document.new `tools/scripts/data-deposit-api/test-edit-get #{statement_uri}`
release_state_old = XPath.first(statement, "//category[@term='#{release_state_term}']").text

edit_uri = XPath.first(entry,"//link[@rel='edit']").attributes["href"]
out = `tools/scripts/data-deposit-api/test-edit-delete #{edit_uri}`
if out.match(/204 No Content/)
    #puts "successful deaccession of study"
else
    puts "deaccession of study failed"
    puts out
end

entry = Document.new `tools/scripts/data-deposit-api/test-edit-get #{study_edit_uri}`
statement = Document.new `tools/scripts/data-deposit-api/test-edit-get #{statement_uri}`
release_state_new = XPath.first(statement, "//category[@term='#{release_state_term}']").text
if release_state_old == "RELEASED" and release_state_new == "DEACCESSIONED"
    puts "#{release_state_term} changed from #{release_state_old} to #{release_state_new} using #{edit_uri}"
else
    puts "Error: unable to deaccession study using #{edit_uri}"
end
